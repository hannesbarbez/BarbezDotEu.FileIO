<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BarbezDotEu.FileIO</name>
    </assembly>
    <members>
        <member name="T:BarbezDotEu.FileIO.DirectoryDumper">
            <summary>
            Basic, static class for "dumping"/listing information for a given folder/directory.
            </summary>
        </member>
        <member name="M:BarbezDotEu.FileIO.DirectoryDumper.ListFilesInFile(System.String,System.String)">
            <summary>
            Creates or overwrites a text file containing a list of fully qualified file names found inside a given directory.
            </summary>
            <param name="directory">The directory to investigate.</param>
            <param name="fileName">The text file to write the information to.</param>
        </member>
        <member name="T:BarbezDotEu.FileIO.DirectoryMerger">
            <summary>
            Basic class implementing static methods pertaining to merging of folders/directories.
            </summary>
        </member>
        <member name="M:BarbezDotEu.FileIO.DirectoryMerger.MergeFilesFromSubDirectoryIntoRootDirectory(System.String,System.Boolean)">
            <summary>
            Moves all files, found in any subdirectories a given root directory, into the root directory.
            </summary>
            <param name="rootDirectory">The root directory where all files in its subdirectories should be moved into.</param>
            <param name="deleteSubDirectoriesOnFinish">Set to true to delete the actual subdirectories after all files have been moved. Set to false to keep the (potentially empty) subdirectories.</param>
        </member>
        <member name="T:BarbezDotEu.FileIO.DirectorySplitter">
            <summary>
            Splits (the contents of) a directory.
            </summary>
        </member>
        <member name="M:BarbezDotEu.FileIO.DirectorySplitter.MoveFilesIntoSubDirectories(System.String,System.Int32)">
            <summary>
            In a best-effort kind of a way, moves files in a directory into subdirectories created on the fly.
            </summary>
            <param name="rootDirectory">The relative or absolute path to the directory to search. This string is not case-sensitive.</param>
            <param name="itemsPerSubFolder">The maximum number of items per subdirectory.</param>
        </member>
        <member name="M:BarbezDotEu.FileIO.DirectorySplitter.FillTextToLength(System.String,System.Int64,System.Char)">
            <summary>
            Prefixes a text with a filler from which a string with a certain length is returned.
            </summary>
            <param name="text">The text to prefix.</param>
            <param name="desiredLength">The desired length of the returned string.</param>
            <param name="filler">The filler to use in prefixing the text.</param>
            <returns>The given text prefixed with a filler from which a string with a certain length is returned. Returns the initial text if it is longer than the provided length.</returns>
        </member>
        <member name="T:BarbezDotEu.FileIO.DiskIO">
            <summary>
            Basic class implementing static methods pertaining to file persisting to disk.
            </summary>
        </member>
        <member name="M:BarbezDotEu.FileIO.DiskIO.WriteLine(System.String,System.String)">
            <summary>
            Appends a line of text to a text file.
            </summary>
            <param name="path">The full file path (i.e. incl. folder and file name + extension) to append the line to.</param>
            <param name="line">The line to append to the text file.</param>
        </member>
        <member name="M:BarbezDotEu.FileIO.DiskIO.SaveText(System.String,System.String,System.String,System.DateTime)">
            <summary>
            Saves a given text to a given filename.
            </summary>
            <param name="filename">The name of the file to store.</param>
            <param name="text">The textual contents of the file.</param>
            <param name="directory">The directory where to store the file on disk.</param>
            <param name="timestampPrefix">The <see cref="T:System.DateTime"/> to prepend the given filename with, if any.</param>
            <returns>The fully-qualified path of where the file was created.</returns>
        </member>
    </members>
</doc>
